OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
shader wickDisplacement
oparam	float	resultF	0		%read{33,38} %write{25,38}
global	point	P	%read{26,34} %write{2147483647,-1}
global	float	u	%read{2,17} %write{2147483647,-1}
global	float	v	%read{8,18} %write{2147483647,-1}
local	float	fuzz	%read{21,22} %write{0,0}
local	float	repeatCount	%read{2,18} %write{1,1}
local	float	s	%read{15,15} %write{7,7}
local	float	t	%read{15,15} %write{13,13}
local	point	centre	%read{16,16} %write{14,14}
local	point	here	%read{16,16} %write{15,15}
local	float	dist	%read{23,23} %write{16,16}
local	float	radius	%read{21,22} %write{20,20}
local	float	inDisk	%read{25,25} %write{24,24}
const	float	$const1	0.100000001		%read{0,36} %write{2147483647,-1}
const	int	$const2	5		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{4,7} %write{2,2}
const	float	$const4	1		%read{4,24} %write{2147483647,-1}
const	string	$const5	"mod"		%read{3,9} %write{2147483647,-1}
temp	float	$tmp2	%read{6,6} %write{5,5}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{7,7} %write{6,6}
temp	float	$tmp5	%read{10,13} %write{8,8}
temp	float	$tmp6	%read{12,12} %write{11,11}
temp	float	$tmp7	%read{11,11} %write{10,10}
temp	float	$tmp8	%read{13,13} %write{12,12}
const	point	$const6	0.5 0.5 0		%read{14,14} %write{2147483647,-1}
const	float	$const8	0		%read{15,15} %write{2147483647,-1}
temp	float	$tmp9	%read{20,20} %write{19,19}
const	string	$const9	"cell"		%read{19,19} %write{2147483647,-1}
temp	float	$tmp10	%read{19,19} %write{17,17}
temp	float	$tmp11	%read{19,19} %write{18,18}
const	float	$const10	0.400000006		%read{20,20} %write{2147483647,-1}
temp	float	$tmp12	%read{24,24} %write{23,23}
temp	float	$tmp13	%read{23,23} %write{21,21}
temp	float	$tmp14	%read{23,23} %write{22,22}
const	float	$const11	0.00999999978		%read{25,25} %write{2147483647,-1}
temp	float	$tmp15	%read{28,28} %write{27,27}
const	string	$const12	"perlin"		%read{27,35} %write{2147483647,-1}
temp	point	$tmp16	%read{27,27} %write{26,26}
const	float	$const13	5		%read{26,26} %write{2147483647,-1}
temp	float	$tmp17	%read{31,31} %write{30,30}
temp	point	$tmp18	%read{30,30} %write{29,29}
const	float	$const15	10		%read{29,29} %write{2147483647,-1}
temp	float	$tmp19	%read{32,32} %write{31,31}
temp	float	$tmp20	%read{33,33} %write{32,32}
const	float	$const17	2		%read{32,32} %write{2147483647,-1}
temp	float	$tmp21	%read{36,36} %write{35,35}
temp	point	$tmp22	%read{35,35} %write{34,34}
const	float	$const19	21		%read{34,34} %write{2147483647,-1}
temp	float	$tmp23	%read{37,37} %write{36,36}
temp	float	$tmp24	%read{38,38} %write{37,37}
const	float	$const21	4		%read{37,37} %write{2147483647,-1}
code ___main___
# wickDisplacement.osl:5
#     float fuzz=0.1;
	assign		fuzz $const1 	%filename{"wickDisplacement.osl"} %line{5} %argrw{"wr"}
# wickDisplacement.osl:6
#     float repeatCount=5;
	assign		repeatCount $const2 	%line{6} %argrw{"wr"}
# wickDisplacement.osl:7
#     float s=mod(repeatCount*u,1);
	mul		$tmp1 repeatCount u 	%line{7} %argrw{"wrr"}
	functioncall	$const5 8 	%argrw{"r"}
# /opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp3 $tmp1 $const4 	%filename{"/opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $const4 $tmp2 	%argrw{"wrr"}
	sub		s $tmp1 $tmp4 	%argrw{"wrr"}
# wickDisplacement.osl:8
#     float t=mod(repeatCount*v,1);
	mul		$tmp5 repeatCount v 	%filename{"wickDisplacement.osl"} %line{8} %argrw{"wrr"}
	functioncall	$const5 14 	%argrw{"r"}
# /opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp7 $tmp5 $const4 	%filename{"/opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const4 $tmp6 	%argrw{"wrr"}
	sub		t $tmp5 $tmp8 	%argrw{"wrr"}
# wickDisplacement.osl:9
#     point centre=point (0.5,0.5,0);
	assign		centre $const6 	%filename{"wickDisplacement.osl"} %line{9} %argrw{"wr"}
# wickDisplacement.osl:10
#     point here=point (s,t,0);
	point		here s t $const8 	%line{10} %argrw{"wrrr"}
# wickDisplacement.osl:11
#     float dist=distance(centre,here);
	distance	dist centre here 	%line{11} %argrw{"wrr"}
# wickDisplacement.osl:12
#     float radius=(float) noise("cell",repeatCount*u,repeatCount*v)*0.4;
	mul		$tmp10 repeatCount u 	%line{12} %argrw{"wrr"}
	mul		$tmp11 repeatCount v 	%argrw{"wrr"}
	noise		$tmp9 $const9 $tmp10 $tmp11 	%argrw{"wrrr"}
	mul		radius $tmp9 $const10 	%argrw{"wrr"}
# wickDisplacement.osl:13
#     float inDisk=1-smoothstep(radius-fuzz,radius+fuzz,dist);
	sub		$tmp13 radius fuzz 	%line{13} %argrw{"wrr"}
	add		$tmp14 radius fuzz 	%argrw{"wrr"}
	smoothstep	$tmp12 $tmp13 $tmp14 dist 	%argrw{"wrrr"}
	sub		inDisk $const4 $tmp12 	%argrw{"wrr"}
# wickDisplacement.osl:14
#     resultF=inDisk*0.01;
	mul		resultF inDisk $const11 	%line{14} %argrw{"wrr"}
# wickDisplacement.osl:17
#     resultF=noise("perlin",P*5)*0.1;
	mul		$tmp16 P $const13 	%line{17} %argrw{"wrr"}
	noise		$tmp15 $const12 $tmp16 	%argrw{"wrr"}
	mul		resultF $tmp15 $const1 	%argrw{"wrr"}
# wickDisplacement.osl:18
#     resultF+=noise("perlin",P*10)*0.1/2;
	mul		$tmp18 P $const15 	%line{18} %argrw{"wrr"}
	noise		$tmp17 $const12 $tmp18 	%argrw{"wrr"}
	mul		$tmp19 $tmp17 $const1 	%argrw{"wrr"}
	div		$tmp20 $tmp19 $const17 	%argrw{"wrr"}
	add		resultF resultF $tmp20 	%argrw{"wrr"}
# wickDisplacement.osl:19
#     resultF+=noise("perlin",P*21)*0.1/4;
	mul		$tmp22 P $const19 	%line{19} %argrw{"wrr"}
	noise		$tmp21 $const12 $tmp22 	%argrw{"wrr"}
	mul		$tmp23 $tmp21 $const1 	%argrw{"wrr"}
	div		$tmp24 $tmp23 $const21 	%argrw{"wrr"}
	add		resultF resultF $tmp24 	%argrw{"wrr"}
	end
