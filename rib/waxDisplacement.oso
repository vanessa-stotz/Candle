OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
shader waxDisplacement
oparam	float	resultF	0		%read{35,40} %write{27,40}
global	point	P	%read{1,1} %write{2147483647,-1}
global	float	u	%read{4,19} %write{2147483647,-1}
global	float	v	%read{10,20} %write{2147483647,-1}
local	point	worldPoint	%read{28,36} %write{1,1}
local	float	fuzz	%read{23,24} %write{2,2}
local	float	repeatCount	%read{4,20} %write{3,3}
local	float	s	%read{17,17} %write{9,9}
local	float	t	%read{17,17} %write{15,15}
local	point	centre	%read{18,18} %write{16,16}
local	point	here	%read{18,18} %write{17,17}
local	float	dist	%read{25,25} %write{18,18}
local	float	radius	%read{23,24} %write{22,22}
local	float	inDisk	%read{27,27} %write{26,26}
const	string	$const1	"world"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	float	$const4	0.100000001		%read{2,38} %write{2147483647,-1}
const	int	$const5	5		%read{3,3} %write{2147483647,-1}
temp	float	$tmp1	%read{6,9} %write{4,4}
const	float	$const7	1		%read{6,26} %write{2147483647,-1}
const	string	$const8	"mod"		%read{5,11} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{7,7}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{9,9} %write{8,8}
temp	float	$tmp5	%read{12,15} %write{10,10}
temp	float	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{13,13} %write{12,12}
temp	float	$tmp8	%read{15,15} %write{14,14}
const	point	$const9	0.5 0.5 0		%read{16,16} %write{2147483647,-1}
const	float	$const11	0		%read{17,17} %write{2147483647,-1}
temp	float	$tmp9	%read{22,22} %write{21,21}
const	string	$const12	"cell"		%read{21,21} %write{2147483647,-1}
temp	float	$tmp10	%read{21,21} %write{19,19}
temp	float	$tmp11	%read{21,21} %write{20,20}
const	float	$const13	0.400000006		%read{22,22} %write{2147483647,-1}
temp	float	$tmp12	%read{26,26} %write{25,25}
temp	float	$tmp13	%read{25,25} %write{23,23}
temp	float	$tmp14	%read{25,25} %write{24,24}
const	float	$const14	0.00999999978		%read{27,27} %write{2147483647,-1}
temp	float	$tmp15	%read{30,30} %write{29,29}
const	string	$const15	"perlin"		%read{29,37} %write{2147483647,-1}
temp	point	$tmp16	%read{29,29} %write{28,28}
const	float	$const16	5		%read{28,28} %write{2147483647,-1}
temp	float	$tmp17	%read{33,33} %write{32,32}
temp	point	$tmp18	%read{32,32} %write{31,31}
const	float	$const18	10		%read{31,31} %write{2147483647,-1}
temp	float	$tmp19	%read{34,34} %write{33,33}
temp	float	$tmp20	%read{35,35} %write{34,34}
const	float	$const20	2		%read{34,34} %write{2147483647,-1}
temp	float	$tmp21	%read{38,38} %write{37,37}
temp	point	$tmp22	%read{37,37} %write{36,36}
const	float	$const22	21		%read{36,36} %write{2147483647,-1}
temp	float	$tmp23	%read{39,39} %write{38,38}
temp	float	$tmp24	%read{40,40} %write{39,39}
const	float	$const24	4		%read{39,39} %write{2147483647,-1}
code ___main___
# waxDisplacement.osl:5
#     point worldPoint = transform("world", P);
	functioncall	$const2 2 	%filename{"waxDisplacement.osl"} %line{5} %argrw{"r"}
# /opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h:285
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	worldPoint $const3 $const1 P 	%filename{"/opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h"} %line{285} %argrw{"wrrr"}
# waxDisplacement.osl:6
#     float fuzz=0.1;
	assign		fuzz $const4 	%filename{"waxDisplacement.osl"} %line{6} %argrw{"wr"}
# waxDisplacement.osl:7
#     float repeatCount=5;
	assign		repeatCount $const5 	%line{7} %argrw{"wr"}
# waxDisplacement.osl:8
#     float s=mod(repeatCount*u,1);
	mul		$tmp1 repeatCount u 	%line{8} %argrw{"wrr"}
	functioncall	$const8 10 	%argrw{"r"}
# /opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp3 $tmp1 $const7 	%filename{"/opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $const7 $tmp2 	%argrw{"wrr"}
	sub		s $tmp1 $tmp4 	%argrw{"wrr"}
# waxDisplacement.osl:9
#     float t=mod(repeatCount*v,1);
	mul		$tmp5 repeatCount v 	%filename{"waxDisplacement.osl"} %line{9} %argrw{"wrr"}
	functioncall	$const8 16 	%argrw{"r"}
# /opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp7 $tmp5 $const7 	%filename{"/opt/pixar/RenderManProServer-25.2/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const7 $tmp6 	%argrw{"wrr"}
	sub		t $tmp5 $tmp8 	%argrw{"wrr"}
# waxDisplacement.osl:10
#     point centre=point (0.5,0.5,0);
	assign		centre $const9 	%filename{"waxDisplacement.osl"} %line{10} %argrw{"wr"}
# waxDisplacement.osl:11
#     point here=point (s,t,0);
	point		here s t $const11 	%line{11} %argrw{"wrrr"}
# waxDisplacement.osl:12
#     float dist=distance(centre,here);
	distance	dist centre here 	%line{12} %argrw{"wrr"}
# waxDisplacement.osl:13
#     float radius=(float) noise("cell",repeatCount*u,repeatCount*v)*0.4;
	mul		$tmp10 repeatCount u 	%line{13} %argrw{"wrr"}
	mul		$tmp11 repeatCount v 	%argrw{"wrr"}
	noise		$tmp9 $const12 $tmp10 $tmp11 	%argrw{"wrrr"}
	mul		radius $tmp9 $const13 	%argrw{"wrr"}
# waxDisplacement.osl:14
#     float inDisk=1-smoothstep(radius-fuzz,radius+fuzz,dist);
	sub		$tmp13 radius fuzz 	%line{14} %argrw{"wrr"}
	add		$tmp14 radius fuzz 	%argrw{"wrr"}
	smoothstep	$tmp12 $tmp13 $tmp14 dist 	%argrw{"wrrr"}
	sub		inDisk $const7 $tmp12 	%argrw{"wrr"}
# waxDisplacement.osl:15
#     resultF=inDisk*0.01;
	mul		resultF inDisk $const14 	%line{15} %argrw{"wrr"}
# waxDisplacement.osl:18
#     resultF=noise("perlin",worldPoint*5)*0.1;
	mul		$tmp16 worldPoint $const16 	%line{18} %argrw{"wrr"}
	noise		$tmp15 $const15 $tmp16 	%argrw{"wrr"}
	mul		resultF $tmp15 $const4 	%argrw{"wrr"}
# waxDisplacement.osl:19
#     resultF+=noise("perlin",worldPoint*10)*0.1/2;
	mul		$tmp18 worldPoint $const18 	%line{19} %argrw{"wrr"}
	noise		$tmp17 $const15 $tmp18 	%argrw{"wrr"}
	mul		$tmp19 $tmp17 $const4 	%argrw{"wrr"}
	div		$tmp20 $tmp19 $const20 	%argrw{"wrr"}
	add		resultF resultF $tmp20 	%argrw{"wrr"}
# waxDisplacement.osl:20
#     resultF+=noise("perlin",worldPoint*21)*0.1/4;
	mul		$tmp22 worldPoint $const22 	%line{20} %argrw{"wrr"}
	noise		$tmp21 $const15 $tmp22 	%argrw{"wrr"}
	mul		$tmp23 $tmp21 $const4 	%argrw{"wrr"}
	div		$tmp24 $tmp23 $const24 	%argrw{"wrr"}
	add		resultF resultF $tmp24 	%argrw{"wrr"}
	end
